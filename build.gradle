
ext { 

    /*
     * Dependencies can be named so that sub-projects can reference consistent version of them.
     * dependencies {
     *     compile deps['joda-time']
     * }
     */
    deps = [
       'junit':           'junit:junit:4.11',
       'groovy':          'org.codehaus.groovy:groovy-all:2.4.6',
       'javax-inject':    'javax.inject:javax.inject:1',
       'slf4j-api':       'org.slf4j:slf4j-api:1.7.21',
       //do we need this one...
       //'logback-core':  'ch.qos.logback:logback-core:1.1.7',
       'logback-classic': 'ch.qos.logback:logback-classic:1.1.7',
       'joda-time':       'joda-time:joda-time:2.9.4',
       'guice':           'com.google.inject:guice:4.0',
       'guava':           'com.google.guava:guava:19.0',
       'eclipse-compiler':'org.eclipse.jdt.core.compiler:ecj:4.5.1',
       'apache-commons-io': 'org.apache.commons:commons-io:1.3.2'
    ]

}

subprojects {
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile deps['slf4j-api']
    compile deps['logback-classic']
    compile deps['guice']

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

   test{
      beforeTest{ descr ->
        logger.warn("Starting Test ${descr.className} : ${descr.name}")
      }
   }
}
